-- Generated by the database client.
CREATE TABLE barang(
    id integer GENERATED ALWAYS AS IDENTITY NOT NULL,
    nama_barang varchar(255) NOT NULL,
    kode_barang varchar(100) NOT NULL,
    kategori_id integer,
    lokasi_id integer,
    merk varchar(100),
    tipe varchar(100),
    spesifikasi text,
    foto_url text,
    tanggal_perolehan date NOT NULL,
    nilai_perolehan numeric(18,2) NOT NULL,
    sumber_dana varchar(100),
    status status_barang NOT NULL DEFAULT 'Tersedia'::status_barang,
    qr_code_url text,
    pemegang_barang_id integer,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    PRIMARY KEY(id),
    CONSTRAINT barang_kategori_id_fkey FOREIGN key(kategori_id) REFERENCES kategori_barang(id),
    CONSTRAINT barang_lokasi_id_fkey FOREIGN key(lokasi_id) REFERENCES lokasi(id)
);
CREATE UNIQUE INDEX barang_kode_barang_key ON public.barang USING btree (kode_barang);





-- Generated by the database client.
CREATE TABLE kategori_barang(
    id integer GENERATED ALWAYS AS IDENTITY NOT NULL,
    nama_kategori varchar(100) NOT NULL,
    kode_kategori varchar(20) NOT NULL,
    PRIMARY KEY(id)
);
CREATE UNIQUE INDEX kategori_barang_nama_kategori_key ON public.kategori_barang USING btree (nama_kategori);
CREATE UNIQUE INDEX kategori_barang_kode_kategori_key ON public.kategori_barang USING btree (kode_kategori);




-- Generated by the database client.
CREATE TABLE log_validasi(
    id integer GENERATED ALWAYS AS IDENTITY NOT NULL,
    rencana_pengadaan_id integer,
    peminjaman_id integer,
    penghapusan_id integer,
    user_validator_id integer NOT NULL,
    waktu_validasi timestamp with time zone DEFAULT now(),
    status_sebelum text,
    status_sesudah text,
    catatan text,
    barang_id integer,
    PRIMARY KEY(id),
    CONSTRAINT log_validasi_rencana_pengadaan_id_fkey FOREIGN key(rencana_pengadaan_id) REFERENCES rencana_pengadaan(id),
    CONSTRAINT log_validasi_peminjaman_id_fkey FOREIGN key(peminjaman_id) REFERENCES peminjaman(id),
    CONSTRAINT log_validasi_penghapusan_id_fkey FOREIGN key(penghapusan_id) REFERENCES penghapusan(id),
    CONSTRAINT fk_log_barang FOREIGN key(barang_id) REFERENCES barang(id)
);






-- Generated by the database client.
CREATE TABLE lokasi(
    id integer GENERATED ALWAYS AS IDENTITY NOT NULL,
    nama_lokasi varchar(100) NOT NULL,
    provinsi varchar(100),
    kab_kota varchar(100),
    kecamatan varchar(100),
    kelurahan_desa varchar(100),
    deskripsi text,
    PRIMARY KEY(id)
);





-- Generated by the database client.
CREATE TABLE peminjaman(
    id integer GENERATED ALWAYS AS IDENTITY NOT NULL,
    user_peminjam_id integer NOT NULL,
    tanggal_pengajuan date NOT NULL DEFAULT now(),
    tanggal_mulai_pinjam date NOT NULL,
    tanggal_rencana_kembali date NOT NULL,
    tanggal_aktual_kembali date,
    keperluan text,
    status status_transaksi NOT NULL DEFAULT 'Diajukan'::status_transaksi,
    catatan_penolakan text,
    created_at timestamp with time zone DEFAULT now(),
    jenis jenis_peminjaman NOT NULL DEFAULT 'Internal'::jenis_peminjaman,
    nama_pihak_kedua varchar(100),
    nip_pihak_kedua varchar(18),
    jabatan_pihak_kedua varchar(100),
    validator_pengurus_barang_id integer,
    surat_peminjaman_url text,
    nomor_usulan varchar(100) NOT NULL,
    PRIMARY KEY(id)
);
CREATE UNIQUE INDEX peminjaman_nomor_usulan_unique ON public.peminjaman USING btree (nomor_usulan);







-- Generated by the database client.
CREATE TABLE peminjaman_detail(
    id integer GENERATED ALWAYS AS IDENTITY NOT NULL,
    peminjaman_id integer NOT NULL,
    barang_id integer NOT NULL,
    PRIMARY KEY(id),
    CONSTRAINT fk_peminjaman FOREIGN key(peminjaman_id) REFERENCES peminjaman(id),
    CONSTRAINT fk_barang FOREIGN key(barang_id) REFERENCES barang(id)
);







-- Generated by the database client.
CREATE TABLE penghapusan(
    id integer GENERATED ALWAYS AS IDENTITY NOT NULL,
    barang_id integer NOT NULL,
    user_pengusul_id integer NOT NULL,
    tanggal_pengajuan date NOT NULL DEFAULT now(),
    alasan_penghapusan text NOT NULL,
    status status_transaksi NOT NULL DEFAULT 'Diajukan'::status_transaksi,
    catatan_penolakan text,
    created_at timestamp with time zone DEFAULT now(),
    foto_kerusakan_url text,
    nomor_usulan varchar(100) NOT NULL,
    berita_acara_url text,
    PRIMARY KEY(id),
    CONSTRAINT penghapusan_barang_id_fkey FOREIGN key(barang_id) REFERENCES barang(id)
);
CREATE UNIQUE INDEX penghapusan_nomor_usulan_unique ON public.penghapusan USING btree (nomor_usulan);






-- Generated by the database client.
CREATE TABLE rencana_pengadaan(
    id integer GENERATED ALWAYS AS IDENTITY NOT NULL,
    nomor_usulan varchar(100) NOT NULL,
    tanggal_usulan date NOT NULL DEFAULT now(),
    program text NOT NULL,
    kegiatan text NOT NULL,
    output text NOT NULL,
    rekening_belanja varchar(255),
    ppk_id integer,
    user_pengusul_id integer NOT NULL,
    status status_transaksi NOT NULL DEFAULT 'Diajukan'::status_transaksi,
    catatan_penolakan text,
    created_at timestamp with time zone DEFAULT now(),
    PRIMARY KEY(id)
);
CREATE UNIQUE INDEX rencana_pengadaan_nomor_usulan_key ON public.rencana_pengadaan USING btree (nomor_usulan);
COMMENT ON COLUMN rencana_pengadaan.ppk_id IS 'FK ke tabel users, menunjuk ke user dengan role PPK';
COMMENT ON COLUMN rencana_pengadaan.user_pengusul_id IS 'Pengguna yang menginput (Pengurus Barang)';





-- Generated by the database client.
CREATE TABLE rencana_pengadaan_detail(
    id integer GENERATED ALWAYS AS IDENTITY NOT NULL,
    rencana_id integer NOT NULL,
    nama_barang_usulan varchar(255) NOT NULL,
    jumlah integer NOT NULL,
    satuan varchar(50) NOT NULL,
    harga_satuan numeric(18,2) NOT NULL,
    spesifikasi_usulan text,
    jenis_belanja varchar(100) DEFAULT 'Belanja Modal'::character varying,
    disetujui boolean,
    PRIMARY KEY(id),
    CONSTRAINT rencana_pengadaan_detail_rencana_id_fkey FOREIGN key(rencana_id) REFERENCES rencana_pengadaan(id)
);




-- Generated by the database client.
CREATE TABLE users(
    id integer GENERATED ALWAYS AS IDENTITY NOT NULL,
    username varchar(50) NOT NULL,
    password text NOT NULL,
    nama varchar(100) NOT NULL,
    nip varchar(18),
    jabatan varchar(100),
    role user_role NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    PRIMARY KEY(id)
);
CREATE UNIQUE INDEX users_username_key ON public.users USING btree (username);






